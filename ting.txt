python 学习路径
1、预备
python安装
集成开发环境

2、基本数据类型
数和四则运算
除法
常用数学函数和运算优先级
字符串
列表
元组
字典
集合

3、语句和文件
运算符
  算术/比较/逻辑（布尔）运算符
语句1
   print/import/赋值语句
 语句2
   if
   if/else/elif
   三元操作
 语句3
   for循环/range
 语句4
   并行迭代
   enumerate
   list解析
 语句5
   break/continue
   while...else
   for...else
4、函数
5、类
模板如下：
class Student:
    native_place = '吉林'  #类属性

    def __init__(self,name,age):
        self.name = name
        self.age = age

    def eat(self):         #实例方法
        print("{0}岁大的{1}在吃饭饭".format(self.age,self.name))

    @staticmethod          #静态方法
    def method():
        print("你吃饭了吗")

    @classmethod           #类方法
    def cm(cls):
        print("我吃饭了呀")

stu1 = Student('张婷',28)
stu2 = Student('杜文',26)
stu1.gender = '女'   #动态绑定属性
print(stu1.name,stu1.age,stu1.gender)
print(stu2.name,stu2.age)

print(stu1.eat())
print(stu2.eat())
#实例方法


print(Student.native_place)
print(stu1.native_place)
print(stu2.native_place)

Student.native_place = '河南'
print(stu1.native_place)
print(stu2.native_place)
#访问类属性


Student.method()
#静态方法使用方式，无参数，使用类名直接访问

Student.cm()
#类方法使用方式，参数是class，使用类名直接访问

def show():
    print("定义在类之外，称为函数")

stu1.show = show   #动态绑定方法
stu1.show()

# stu2.show()  会报错，stu2并未绑定show方法，函数在绑定到对象之后就称为方法

"""
总结：
1、面向过程、面向对象
2、类对象class：
   类属性(Student.native_place() 调用)
   类方法(Student.cm() 调用)
   实例方法(stu = Student(),    stu.eat() = Student.eat(stu) 调用)
   静态方法(Student.method() 调用)
3、实例对象
   类名()
   动态绑定属性
   动态绑定方法
   """


6、错误和异常
7、模块
8、保存数据
9、实战
